/*
<metadata>
    description="waves" 
    details="draw wave"
    target="Lightpad" 
    tags="My Apps;"
    
    <variables>
        <variable name="mode" displayName="Mode" type="int" min="1" max="2" value="1" displaymode="stepper" tooltip="change mode" />
        <variable name="Colour1" type="colour" value="0xffff0000" />
        <variable name="Colour2" type="colour" value="0xffffa500" />
        <variable name="Colour3" type="colour" value="0xffffff00" />
        <variable name="Colour4" type="colour" value="0xff008000" />
        <variable name="Colour5" type="colour" value="0xff00ffff" />
        <variable name="Colour6" type="colour" value="0xff0000ff" />
        <variable name="Colour7" type="colour" value="0xff900090" />
        <variable name="Colour8" type="colour" value="0xffffffff" />
        
    </variables>
</metadata>
*/

int ccX;
int ccY;
int ccZ;
const int red = 0xffff0000;
const int orange = 0xffffa500;
const int yellow = 0xffffff00;
const int green = 0xff008000;
const int skyblue = 0xff00ffff;
const int blue = 0xff0000ff;
const int purple = 0xff900090;
const int white = 0xffffffff;

const int B7 = 0x80001f72;
const int B6 = 0x80003183;
const int B5 = 0x800054a4;
const int B4 = 0x80006bb7;
const int B3 = 0x80006cb7;
const int B2 = 0x800097be;
const int B1 = 0x801aafc8;
const int B0 = 0x807ce0e7;

int num;
int ycord;
int t;

void initialise()
{
    for (int i = 0; i < 32; ++i) setLocalConfigActiveState (i, false, false);
    num = 0;
    t = 0;
    
    initialiseConfig();
}

void initialiseConfig()
{
    setLocalConfigItemRange(20,1,2);
    /*
    setLocalConfigItemRange(Colour1,0x00000000,0xffffffff);
    setLocalConfigItemRange(Colour2,0x00000000,0xffffffff);
    setLocalConfigItemRange(Colour3,0x00000000,0xffffffff);
    setLocalConfigItemRange(Colour4,0x00000000,0xffffffff);
    setLocalConfigItemRange(Colour5,0x00000000,0xffffffff);
    setLocalConfigItemRange(Colour6,0x00000000,0xffffffff);
    setLocalConfigItemRange(Colour7,0x00000000,0xffffffff);
    setLocalConfigItemRange(Colour8,0x00000000,0xffffffff);
    */
}

void getColorConfig()
{
    getLocalConfig(Colour1);
    setLocalConfig(Colour1,Colour1);
    
}

void wave_layout()
{   
    t = ycord(getMillisecondCounter()/100);
    for(int i = 0; i<15; i++)
    {   
        if (mode == 1){
            if(t+i >= 15){
                fillPixel(B7,i,(t+i)%15);
                fillPixel(B6,i,((t+i)%15+1)%15);
                fillPixel(B5,i,((t+i)%15+2)%15);
                fillPixel(B4,i,((t+i)%15+3)%15);
                fillPixel(B3,i,((t+i)%15+4)%15);
                fillPixel(B2,i,((t+i)%15+5)%15);
                fillPixel(B1,i,((t+i)%15+6)%15);
                fillPixel(B0,i,((t+i)%15+7)%15);
                fillPixel(B0,i,((t+i)%15+8)%15);
                fillPixel(B1,i,((t+i)%15+9)%15);
                fillPixel(B2,i,((t+i)%15+10)%15);
                fillPixel(B3,i,((t+i)%15+11)%15);
                fillPixel(B4,i,((t+i)%15+12)%15);
                fillPixel(B5,i,((t+i)%15+13)%15);
                fillPixel(B6,i,((t+i)%15+14)%15);    
            }
            else{
                fillPixel(B7,i,(t+i)%15);
                fillPixel(B6,i,(t+i+1)%15);
                fillPixel(B5,i,(t+i+2)%15);
                fillPixel(B4,i,(t+i+3)%15);
                fillPixel(B3,i,(t+i+4)%15);
                fillPixel(B2,i,(t+i+5)%15);
                fillPixel(B1,i,(t+i+6)%15);
                fillPixel(B0,i,(t+i+7)%15);
                fillPixel(B0,i,(t+i+8)%15);
                fillPixel(B1,i,(t+i+9)%15);
                fillPixel(B2,i,(t+i+10)%15);
                fillPixel(B3,i,(t+i+11)%15);
                fillPixel(B4,i,(t+i+12)%15);
                fillPixel(B5,i,(t+i+13)%15);
                fillPixel(B6,i,(t+i+14)%15);
            }
        }else{
            if(t+i >= 15){
                fillPixel(Colour1,i,(t+i)%15);
                fillPixel(Colour2,i,((t+i)%15+1)%15);
                fillPixel(Colour3,i,((t+i)%15+2)%15);
                fillPixel(Colour4,i,((t+i)%15+3)%15);
                fillPixel(Colour5,i,((t+i)%15+4)%15);
                fillPixel(Colour6,i,((t+i)%15+5)%15);
                fillPixel(Colour7,i,((t+i)%15+6)%15);
                fillPixel(Colour8,i,((t+i)%15+7)%15);
                fillPixel(Colour7,i,((t+i)%15+8)%15);
                fillPixel(Colour6,i,((t+i)%15+9)%15);
                fillPixel(Colour5,i,((t+i)%15+10)%15);
                fillPixel(Colour4,i,((t+i)%15+11)%15);
                fillPixel(Colour3,i,((t+i)%15+12)%15);
                fillPixel(Colour2,i,((t+i)%15+13)%15);
                fillPixel(Colour1,i,((t+i)%15+14)%15);    
            }
            else{
                fillPixel(Colour1,i,(t+i)%15);
                fillPixel(Colour2,i,(t+i+1)%15);
                fillPixel(Colour3,i,(t+i+2)%15);
                fillPixel(Colour4,i,(t+i+3)%15);
                fillPixel(Colour5,i,(t+i+4)%15);
                fillPixel(Colour6,i,(t+i+5)%15);
                fillPixel(Colour7,i,(t+i+6)%15);
                fillPixel(Colour8,i,(t+i+7)%15);
                fillPixel(Colour7,i,(t+i+8)%15);
                fillPixel(Colour6,i,(t+i+9)%15);
                fillPixel(Colour5,i,(t+i+10)%15);
                fillPixel(Colour4,i,(t+i+11)%15);
                fillPixel(Colour3,i,(t+i+12)%15);
                fillPixel(Colour2,i,(t+i+13)%15);
                fillPixel(Colour1,i,(t+i+14)%15);
            }
        }
    }
}

int ycord(int T)
{
    int y = T%15;
    return y;
}

int touchColor(int N){
    int m = N%7;    
    
    if(m == 0){return red}
    else if(m == 1){return orange}
    else if(m == 2){return yellow}
    else if(m == 3){return green}
    else if(m == 4){return skyblue}
    else if(m == 5){return blue}
    else{return purple}   
}

void touchStart (int index, float x, float y, float z, float vz)
{
    addPressurePoint (touchColor(num), x, y, z *10.0);
    ccX = int(map(x, 0.07, 1.93, 0.0, 127.0));//exchange x-coordinate data(0.07~1.93) to (0~127)
    ccY = int(map(y, 0.07, 1.93, 0.0, 127.0));//exchange y-coordinate data(0.07~1.93) to (0~127)
    ccZ = int(map(z, 0.0, 1.0, 0.0, 127.0));//exchange z-coordinate(pressure) data(0.0~1.0) to (0~127)
    /*
    sendCC (( - 1), 60, ccX);//x-coordinate CC60
    sendCC ((channel - 1), 61, ccY);//y-coordinate CC61
    sendCC ((channel - 1), 62, ccZ);//pressure CC62
    */
}

void touchMove (int index, float x, float y, float z, float vz)
{
    addPressurePoint (touchColor(num), x, y, z *10.0);
    ccX = int(map(x, 0.07, 1.93, 0.0, 127.0));//exchange x-coordinate data(0.07~1.93) to (0~127)
    ccY = int(map(y, 0.07, 1.93, 0.0, 127.0));//exchange y-coordinate data(0.07~1.93) to (0~127)
    ccZ = int(map(z, 0.0, 1.0, 0.0, 127.0));//exchange z-coordinate(pressure) data(0.0~1.0) to (0~127)
    /*
    sendCC ((channel - 1), 60, ccX);//x-coordinate CC60
    sendCC ((channel - 1), 61, ccY);//y-coordinate CC61
    sendCC ((channel - 1), 62, ccZ);//pressure CC62
    */
    num += 1;
    
}

void touchEnd (int touchIndex, float x, float y, float z, float vz)
{
    ccX = 0;
    ccY = 0;
    ccZ = 0;
    /*
    sendCC ((channel - 1), 60, ccX);//x-coordinate CC60
    sendCC ((channel - 1), 61, ccY);//y-coordinate CC61
    sendCC ((channel - 1), 62, ccZ);//y-coordinate CC61
    */
    setLocalConfig(20,2);
    
}

void handleButtonDown(int index)
{
    if (mode == 1)
    {
        //mode = 2;
        setLocalConfig(20,2);
    }
    else 
    {
        //mode = 1;
        setLocalConfig(20,1);
    }
    getColorConfig();
}


void repaint()
{
    clearDisplay();
    getLocalConfig(20);
    getColorConfig();
    wave_layout();
    drawPressureMap();
    fadePressureMap();
    
    log(t);
}