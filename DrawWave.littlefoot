/*
<metadata>
    description="waves" details="draw wave" target="Lightpad" tags="My Apps;"
    
    <variables>
        <variable name="mode" displayName="Mode" type="int" min="1" max="2" value="1" displaymode="stepper" tooltip="change mode" />
        <variable name="Colour1" type="colour" value="0x83e5ea" />
        <variable name="Colour2" type="colour" value="0x24b5cd" />
        <variable name="Colour3" type="colour" value="0x0095bd" />
        <variable name="Colour4" type="colour" value="0x0081ba" />
        <variable name="Colour5" type="colour" value="0x0069b6" />
        <variable name="Colour6" type="colour" value="0x004b9b" />
        <variable name="Colour7" type="colour" value="0x00287b" />
        <variable name="Colour8" type="colour" value="0x001f72" />    
    </variables>
</metadata>
*/

int ccX;
int ccY;
int ccZ;

const int red = 0xffff0000;
const int orange = 0xffffa500;
const int yellow = 0xffffff00;
const int green = 0xff008000;
const int skyblue = 0xff00ffff;
const int blue = 0xff0000ff;
const int purple = 0xff900090;
const int white = 0xffffffff;

const int B7 = 0x80001f72;
const int B6 = 0x8000287b;
const int B5 = 0x80004b9b;
const int B4 = 0x800069b6;
const int B3 = 0x800081ba;
const int B2 = 0x800095bd;
const int B1 = 0x8024b5cd;
const int B0 = 0x8083e5ea;

int num;
int ycord;
int t;

void initialise()
{
    num = 0;
    t = 0;
    initialiseConfig();
}

void initialiseConfig()
{
    setLocalConfigItemRange(20,0,1);
    setLocalConfig(20,1);
}


void wave_layout()
{   
    t = ycord(getMillisecondCounter()/100);
    for(int i = 0; i<15; i++)
    {   
        if (getLocalConfig(20) == 0 || mode == 1){
            if(t+i >= 15){
                fillPixel(Colour1,i,getRandomInt(5)+2);
                fillPixel(Colour2,i,getRandomInt(5)+3);
                fillPixel(Colour3,i,getRandomInt(5)+4);
                fillPixel(Colour4,i,getRandomInt(5)+5);
                fillPixel(Colour5,i,getRandomInt(5)+6);
                fillPixel(Colour6,i,getRandomInt(5)+7);
                fillPixel(Colour7,i,getRandomInt(5)+8);
                fillPixel(Colour8,i,getRandomInt(5)+9);
               
            }else{
                fillPixel(Colour1,i,getRandomInt(5)+2);
                fillPixel(Colour2,i,getRandomInt(5)+3);
                fillPixel(Colour3,i,getRandomInt(5)+4);
                fillPixel(Colour4,i,getRandomInt(5)+5);
                fillPixel(Colour5,i,getRandomInt(5)+6);
                fillPixel(Colour6,i,getRandomInt(5)+7);
                fillPixel(Colour7,i,getRandomInt(5)+8);
                fillPixel(Colour8,i,getRandomInt(5)+9);
               
            }
        }
        else if (getLocalConfig(20) == 1 || mode == 2){
            if(t+i >= 15){
                fillPixel(Colour1,i,(t+i)%15);
                fillPixel(Colour2,i,((t+i)%15+1)%15);
                fillPixel(Colour3,i,((t+i)%15+2)%15);
                fillPixel(Colour4,i,((t+i)%15+3)%15);
                fillPixel(Colour5,i,((t+i)%15+4)%15);
                fillPixel(Colour6,i,((t+i)%15+5)%15);
                fillPixel(Colour7,i,((t+i)%15+6)%15);
                fillPixel(Colour8,i,((t+i)%15+7)%15);
                fillPixel(Colour7,i,((t+i)%15+8)%15);
                fillPixel(Colour6,i,((t+i)%15+9)%15);
                fillPixel(Colour5,i,((t+i)%15+10)%15);
                fillPixel(Colour4,i,((t+i)%15+11)%15);
                fillPixel(Colour3,i,((t+i)%15+12)%15);
                fillPixel(Colour2,i,((t+i)%15+13)%15);
                fillPixel(Colour1,i,((t+i)%15+14)%15);    
            }else{
                fillPixel(Colour1,i,(t+i)%15);
                fillPixel(Colour2,i,(t+i+1)%15);
                fillPixel(Colour3,i,(t+i+2)%15);
                fillPixel(Colour4,i,(t+i+3)%15);
                fillPixel(Colour5,i,(t+i+4)%15);
                fillPixel(Colour6,i,(t+i+5)%15);
                fillPixel(Colour7,i,(t+i+6)%15);
                fillPixel(Colour8,i,(t+i+7)%15);
                fillPixel(Colour7,i,(t+i+8)%15);
                fillPixel(Colour6,i,(t+i+9)%15);
                fillPixel(Colour5,i,(t+i+10)%15);
                fillPixel(Colour4,i,(t+i+11)%15);
                fillPixel(Colour3,i,(t+i+12)%15);
                fillPixel(Colour2,i,(t+i+13)%15);
                fillPixel(Colour1,i,(t+i+14)%15);
            }
        }
        else
        {
            
        }
    }
}

int ycord(int T)
{
    int y = T%15;
    return y;
}

int touchColor(int N){
    int m = N%7;    
    
    if(m == 0){return red}
    else if(m == 1){return orange}
    else if(m == 2){return yellow}
    else if(m == 3){return green}
    else if(m == 4){return skyblue}
    else if(m == 5){return blue}
    else{return purple}   
}

void touchStart (int index, float x, float y, float z, float vz)
{
    addPressurePoint (touchColor(num), x, y, z *10.0);
}

void touchMove (int index, float x, float y, float z, float vz)
{
    addPressurePoint (touchColor(num), x, y, z *10.0);
    num += 1;   
}

void touchEnd (int touchIndex, float x, float y, float z, float vz)
{

}

void handleButtonDown(int index)
{
    if (getLocalConfig(20) == 1)
    {
        //mode = 2;
        setLocalConfig(20,0);
    }
    else 
    {
        //mode = 1;
        setLocalConfig(20,1);
    }
    mode = getLocalConfig(20)+1;
}

void repaint()
{
    clearDisplay();
    wave_layout();
    drawPressureMap();
    fadePressureMap();
    
    //log(t);
    //log(num);
    log(mode);
}